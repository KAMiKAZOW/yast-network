Read	.probe.architecture nil
Read	.probe.has_apm nil
Read	.probe.has_pcmcia nil
Read	.probe.has_smp nil
Read	.probe.system []
Dump	ReadConfig
Dir	.network.section: ["eth0", "eth1", "ippp3", "pcmcia", "ppp2", "ppp5.bak"]
Dir	.network.value."eth0": ["IPADDR"]
Read	.network.value."eth0".IPADDR "0"
Dir	.network.value."eth1": ["IPADDR"]
Read	.network.value."eth1".IPADDR "1"
Dir	.network.value."ippp3": ["IPADDR"]
Read	.network.value."ippp3".IPADDR "3"
Dir	.network.value."ppp2": ["IPADDR"]
Read	.network.value."ppp2".IPADDR "2"
Return	true
Dump	all=$["eth":$["0":$["IPADDR":"0"], "1":$["IPADDR":"1"]], "ippp":$["3":$["IPADDR":"3"]], "ppp":$["2":$["IPADDR":"2"]]]
Dir	.network.section: ["eth0", "eth1", "ippp3", "pcmcia", "ppp2", "ppp5.bak"]
Dir	.network.value."eth0": ["IPADDR"]
Read	.network.value."eth0".IPADDR "0"
Dir	.network.value."eth1": ["IPADDR"]
Read	.network.value."eth1".IPADDR "1"
Return	true
Dump	eth=$["eth":$["0":$["IPADDR":"0"], "1":$["IPADDR":"1"]]]
Dir	.network.section: ["eth0", "eth1", "ippp3", "pcmcia", "ppp2", "ppp5.bak"]
Dir	.network.value."ppp2": ["IPADDR"]
Read	.network.value."ppp2".IPADDR "2"
Return	true
Dump	ppp=$["ppp":$["2":$["IPADDR":"2"]]]
Dir	.network.section: ["eth0", "eth1", "ippp3", "pcmcia", "ppp2", "ppp5.bak"]
Dir	.network.value."ippp3": ["IPADDR"]
Read	.network.value."ippp3".IPADDR "3"
Return	true
Dump	ippp=$["ippp":$["3":$["IPADDR":"3"]]]
Dir	.network.section: ["eth0", "eth1", "ippp3", "pcmcia", "ppp2", "ppp5.bak"]
Return	true
Dump	tr=$[]
Dir	.network.section: ["eth0", "eth1", "ippp3", "pcmcia", "ppp2", "ppp5.bak"]
Dir	.network.value."eth0": ["IPADDR"]
Read	.network.value."eth0".IPADDR "0"
Dir	.network.value."eth1": ["IPADDR"]
Read	.network.value."eth1".IPADDR "1"
Dir	.network.value."ppp2": ["IPADDR"]
Read	.network.value."ppp2".IPADDR "2"
Return	true
Dump	ppp|eth=$["eth":$["0":$["IPADDR":"0"], "1":$["IPADDR":"1"]], "ppp":$["2":$["IPADDR":"2"]]]
Dir	.network.section: ["eth0", "eth1", "ippp3", "pcmcia", "ppp2", "ppp5.bak"]
Dir	.network.value."eth0": ["IPADDR"]
Read	.network.value."eth0".IPADDR "0"
Dir	.network.value."eth1": ["IPADDR"]
Read	.network.value."eth1".IPADDR "1"
Return	true
Dump	eth|tr=$["eth":$["0":$["IPADDR":"0"], "1":$["IPADDR":"1"]]]
Dump	LocateDevices
Return	["eth0"]
Return	[]
Return	[]
Return	["eth1"]
Return	["tr1"]
