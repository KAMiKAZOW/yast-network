{

include "testsuite.ycp";

map READ = $[
    "probe" : $[ "system" : []],
];

TESTSUITE_INIT([READ], nil);
import "Internet";

DUMP("Fastest");
READ = $[
    "network" : $[
	"section" : $[ "dsl0":$[], "eth0":$[] ],
	"value" : $[ "dsl0" :$["DEVICE":"eth0"], "eth0":$[] ],
    ]
];
TEST(``(Internet::FindFastest()), [READ], nil);
DUMP(Internet::device);
DUMP(Internet::type);

READ = $[ "network" : $[ "section" : $[ "dsl0":$[], "eth0":$[] ]]];
TEST(``(Internet::FindFastest()), [READ], nil);
DUMP(Internet::device);
DUMP(Internet::type);

READ = $[ "network" : $[ "section" : $[ "eth1":$[], "tr0":$[] ]]];
TEST(``(Internet::FindFastest()), [READ], nil);
DUMP(Internet::device);
DUMP(Internet::type);

READ = $[ "network" : $[ "section" : $[ "dsl0":$[], "tr0":$[] ]]];
TEST(``(Internet::FindFastest()), [READ], nil);
DUMP(Internet::device);
DUMP(Internet::type);

READ = $[ "network" : $[ "section" : $[ "dsl0":$[], "ppp0":$[] ]]];
TEST(``(Internet::FindFastest()), [READ], nil);
DUMP(Internet::device);
DUMP(Internet::type);

READ = $[ "network" : $[ "section" : $[ "ppp0":$[], "tr1":$[] ]]];
TEST(``(Internet::FindFastest()), [READ], nil);
DUMP(Internet::device);
DUMP(Internet::type);

READ = $[ "network" : $[ "section" : $[ "ppp0":$[] ]]];
TEST(``(Internet::FindFastest()), [READ], nil);
DUMP(Internet::device);
DUMP(Internet::type);

READ = $[ "network" : $[ "section" : $[ "ippp0":$[], "tr1":$[] ]]];
TEST(``(Internet::FindFastest()), [READ], nil);
DUMP(Internet::device);
DUMP(Internet::type);

READ = $[ "network" : $[ "section" : $[ "ippp0":$[], "ppp0":$[] ]]];
TEST(``(Internet::FindFastest()), [READ], nil);
DUMP(Internet::device);
DUMP(Internet::type);

READ = $[ "network" : $[ "section" : $[]]];
TEST(``(Internet::FindFastest()), [READ], nil);
DUMP(Internet::device);
DUMP(Internet::type);

}
