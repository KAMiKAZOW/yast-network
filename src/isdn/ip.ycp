/**
 * File:
 *   include/network/isdn/dialogs.ycp
 *
 * Package:
 *   Configuration of network
 *
 * Summary:
 *   ISDN configuration dialogs
 *
 * Authors:
 *   Michal Svec <msvec@suse.cz>
 *
 * $Id$
 *
 */

{

textdomain "network";

import "Wizard";
import "ISDN";

include "ui/common_popups.ycp";

/**
 * Dialog for ISDN IP settings
 * @return any user input
 */

global define symbol ip() ``{

    /* PREPARE VARIABLES */

    string Local_IP = ISDN::Local_IP;
    string Remote_IP = ISDN::Remote_IP;

    /* DIALOG TEXTS and  DIALOG CONTENTS */

    string caption = _("ISDN IP address settings");

    // help text 1/3
    string helptext =
_("<p>Please fill in the IP addresses. If you have syncppp connection, normally
keep the preselected values 192.168.x.99 and 192.168.x.1. In the case of rawip, 
obtain these numbers from your provider. If you have a local ethernet, check 
that the IP adresses are not in the same subnet as your local ethernet. </p>");

    // help text 2/3
    helptext = helptext +
_("<p>Check the button for <b>dynamic IP address</b> if you plan to use diald 
(demand dialing daemon), where the outgoing address is unknown at the moment 
the link is going up.</p>");

    if (Local_IP == "InvalidIP") Local_IP = "";
    if (Remote_IP == "InvalidIP") Remote_IP = "";

    term contents = nil;

    if (lookup(lookup(ProviderISDN, "extra", $[]), "I4L_ENCAP", "default") == "rawip")		// FIXME: default value
    {
	contents =
	    `HSquash(
		`VBox(
		    `Frame(_("IP address settings"),
			`HBox(
			    `HSpacing(),
			    `VBox(
				`VSpacing(),
				`Left(`TextEntry(`id(`IP_local), _("&Local IP address of your machine"), Local_IP)),
				`Left(`TextEntry(`id(`IP_remote), _("&Remote IP address"), Remote_IP)),
				`VSpacing()
			    ),
			    `HSpacing()
			)
		    ),
		    `Left(`CheckBox(`id(`dynamic_ip), _("&Dynamic IP address"), ISDN::dynamicIP))
		)
	    );
    }
    else
    {
        // help text 3/3
	helptext = helptext +
_("<p>Check the button for <b>dynamic DNS assignment</b> if you want to change
your domain name servers after the connection is up. (This replace your static
DNS configuraton with obtained DNS server IP addresses) Today, almost all
providers use <b>Dynamic DNS assignment</b>.</p>");
	contents =
	    `HSquash(
		`VBox(
		    `Frame(_("IP address settings"),
			`HBox(
			    `HSpacing(),
			    `VBox(
				`Left(`TextEntry(`id(`IP_local), _("&Local IP address of your machine"), Local_IP)),
                                `Left(`TextEntry(`id(`IP_remote), _("&Remote IP address"), Remote_IP)),
				`VSpacing()
			    ),
			    `HSpacing()
			)
		    ),
		    `VSpacing(),
		    `Left(`CheckBox(`id(`dynamic_ip), _("&Dynamic IP address"), ISDN::dynamicIP)),
		    `VSpacing(),
		    `Left(`CheckBox(`id(`dynamic_dns), `opt(`notify), _("Dynamic DN&S assignment"), ISDN::dynamicDNS))
		)
	    );
    }


    /* DIALOG PREPARE */
    Wizard::SetContents(caption, contents, helptext, true, true);

    Wizard::ReplaceNextButton(`PushButton(`id(`next), `opt(`default), OKButtonLabel()));

    /* MAIN CYCLE */
    symbol ret = nil;
    while (true) {
	ret = UI::UserInput();

	/* abort? */
	if(ret == `abort || ret == `cancel) {
	    if (UI::ReallyAbortPopup(true))
		break;
	    else
		continue;
	}
	else if (ret == `back) {
	    break;
	}
	else if (ret == `next) {
	    Local_IP = UI::QueryWidget(`id(`IP_local), `Value);
	    Remote_IP = UI::QueryWidget(`id(`IP_remote), `Value);

	    if (!checkIP(Local_IP) || !checkIP(Remote_IP)) {
		UI::MessagePopup(_("You have to fill in Local and Remote IP addresses correctly"));
		continue;
	    }
	    else
	    {
		break;
	    }
	}
	else if (ret == `dynamic_dns)
	{
	    boolean Dynamic_DNS = UI::QueryWidget(`id(`dynamic_dns), `Value);
	    string button_label = Dynamic_DNS ? Wizard::OKButtonLabel : Wizard::NextButtonLabel();
	    UI::ChangeWidget (`id (`next), `Label, button_label);
	}
	else {
	    y2error("unexpected retcode: %1", ret);
	    continue;
	}

    }

    /* UPDATE VARIABLES */

    if (ret == `next)
    {
	ISDN::dynamicIP = UI::QueryWidget(`id(`dynamic_ip), `Value);

	if (ISDN::encap == "syncppp")
	{
	    ISDN::dynamicDNS = UI::QueryWidget(`id(`dynamic_dns), `Value);
	}

	ISDN::localIP = UI::QueryWidget(`id(`IP_local), `Value);
	ISDN::remoteIP = UI::QueryWidget(`id(`IP_remote), `Value);
    }

    if (ret == `next && ISDN::dynamicDNS == "0")
    {
// Old code:	TmpConfiguration = add (TmpConfiguration, "Static_DNS", true);
	return `staticdns;
    }

    return ret;
}

}
