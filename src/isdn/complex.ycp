/**
 * File:	include/network/isdn/complex.ycp
 * Package:	Configuration of network
 * Summary:	Summary, overview and IO dialogs for isdns configuration.
 * Authors:	Michal Svec <msvec@suse.cz>
 *
 * $Id$
 */

{

textdomain "network";

import "ISDN";

import "Wizard";
import "Wizard_hw";

include "ui/common_popups.ycp";
include "ui/common_messages.ycp";
include "network/routines.ycp";

/**
 * Return a modification status
 * @return true if data was modified
 */
global define boolean Modified() ``{
    return ISDN::Modified() || Providers::Modified();
}

/**
 * Commit changes to internal structures
 * @return always `next
 */
global define symbol Commit(boolean prov) ``{
    if (prov)
	Providers::Commit();
    ISDN::Commit();
    return `next;
}

/**
 * Read settings dialog
 * @return `abort if aborted and `next otherwise
 */
global define symbol ReadDialog() ``{

    /* isdns read dialog help 1/2 */
    string helptext = _("<P><B><BIG>Initializing ISDN cardss configuration
</BIG></B><BR>Please wait for a while...<BR></P>");

    /* isdns read dialog help 2/2 */
    helptext = helptext + _("<P><B><BIG>Aborting the initialization:
</BIG></B><BR>You can safely abort the configuration utility by pressing
the <B>Abort</B> button now.</P>");

    Wizard::RestoreHelp(helptext);
    ISDN::AbortFunction = ``{return PollAbort();};
    boolean ret = ISDN::Read();
    return ret ? `next : `abort;
}

/**
 * Write settings dialog
 * @return `abort if aborted and `next otherwise
 */
global define symbol WriteDialog() ``{
    if(!Modified()) return `next;

    /* isdns write dialog help 1/2 */
    string helptext = _("<P><B><BIG>Saving ISDN cards configuration
</BIG></B><BR>Please wait for a while...<BR></P>");

    /* isdns write dialog help 2/2 */
    helptext = helptext + _("<P><B><BIG>Aborting the saving:</BIG></B><BR>
You can abort the saving by pressing the <B>Abort</B> button.
An additional dialog will inform you whether it is safe to do so or not.</P>");

    Wizard::RestoreHelp(helptext);
    ISDN::AbortFunction = ``{return PollAbort() && ReallyAbort();};
    boolean ret = ISDN::Write(true);
    return ret ? `next : `abort;
}

/**
 * Main dialog
 * @return dialog result
 */
global define symbol SummaryDialog() ``{

    /* ISDN summary dialog caption */
    string caption = _("ISDN cards configuration");

    /* isdns summary dialog help 1/3 */
    string helptext = _("<P><B><BIG>ISDN cards setup</BIG></B><BR>
Here you can configure your isdn.
<BR></P>");

    /* isdns summary dialog help 2/3 */
    helptext = helptext + _("<P><B><BIG>Adding a ISDN card:</BIG></B><BR>
Choose an ISDN card from the list of the detected ISDN cards.
If your ISDN card was not autodetected, use <B>Other (not detected)</B>.
Then press <B>Configure</B>.
</P>");

    /* isdns summary dialog help 3/3 */
    helptext = helptext + _("<P><B><BIG>Editing or deleting:</BIG></B><BR>
If you press <B>Edit</B>, an additional dialog (where you
can change the configuration and setup dialup connections) will open.
</P>");

    list summary = ISDN::Summary(true);
    list unconfigured = select(summary, 1, []);
    string configured = select(summary, 0, "");

    y2debug("unconfigured=%1",unconfigured);
    term contents = Wizard_hw::DetectedContent(_("ISDN cards to configure"),
	    unconfigured, false, configured);

    Wizard::SetContentsButtons(caption, contents, helptext,
	    BackButtonLabel(), FinishButtonLabel());

    any ret = nil;
    while(true) {

	ret = UI::UserInput();

	/* abort? */
	if(ret == `abort || ret == `cancel) {
	    if(ReallyAbort()) break;
	    else continue;
	}
	/* overview dialog */
	else if(ret == `edit_button) {
	    ret = `overview;
	    break;
	}
	/* configure the selected card */
	else if(ret == `configure_button) {
	    ISDN::Add();
	    any selected = UI::QueryWidget(`id(`detected_selbox), `CurrentItem);
	    if(selected == `other) {
		ret = `other;
	    }
	    else {
		ISDN::SelectHW(selected);
		ret = `configure;
	    }
	    break;
	}
	else if(ret == `next || ret == `back) {
	    break;
	}
	else {
	    y2error("unexpected retcode: %1", ret);
	    continue;
	}
    }

    return ret;
}

/**
 * Overview dialog
 * @return dialog result
 */
global define symbol OverviewDialog() ``{

    /* ISDN overview dialog caption */
    string caption = _("ISDN cards configuration overview");

    string helptext = /* isdns overview dialog help 1/5 */
    _("<P><B><BIG>ISDN cards overview</BIG></B><BR>
Here you can get an overview about installed ISDN cards and connection setups.
Additionally you can edit their configuration.<BR></P>");

    /* isdns overview dialog help 2/5 */
    helptext = helptext + _("<P><B><BIG>Adding an ISDN card:</BIG></B><BR>
If you press <B>Add</B>, you can manually configure an ISDN card.</P>");

    /* isdns overview dialog help 3/5 */
    helptext = helptext + _("<P><B><BIG>Test an ISDN card setup:</BIG></B><BR>
If you press <B>Test</B>, the system tries to load the driver for the 
selcted card</P>");

    /* isdns overview dialog help 4/5 */
    helptext = helptext + _("<P><B><BIG>Adding an ISDN connection:</BIG></B><BR>
If you press <B>Add</B>, you can configure an ISDN dialup connection.</P>");

    /* isdns overview dialog help 5/5 */
    helptext = helptext + _("<P><B><BIG>Editing or deleting:</BIG></B><BR>
Choose an ISDN card or connection, whose configuration you want to change or remove.
Then press the appropriate button: <B>Edit</B> or <B>Delete</B>.</P>");

    list overviewdev = ISDN::OverviewDev();
    list overviewif = ISDN::OverviewIf();

    y2debug("overviewdev=%1",overviewdev);
    y2debug("overviewif=%1",overviewif);

    /* Header of table with installed cards */

    term but_box = `HBox (
	`opt (`hstretch),
	`PushButton (`id (`addif_button), _("&Add")),
	`PushButton (`id (`editif_button),  _("Ed&it")),
	`PushButton (`id (`delif_button), _("Dele&te"))
    );
  
    term contentsif =
	`VBox(
	    `Left(`Heading(`id(`title_i), _("ISDN connections"))),
	    `Table (`id (`TableIf),
		`header(_("No."), _("Type"), _("Connection"), _("IP"), _("Remote IP")),
		overviewif),
	    but_box
	);
    term titledev = `Left(`Heading(`id(`title_d), _("ISDN controler")));
    term contents = Wizard_hw::ConfiguredContent(
	    `header(_("No."), _("Type"), _("Device"), _("Hardware")/*, _("Active"), _("IP Address"), "PCMCIA", "Driver"*/),
	    overviewdev, titledev, nil, contentsif, 
	    `PushButton (`id (`test_button), _("Te&st"))
    );

    contents = Wizard_hw::SpacingAround(contents, 1.5, 1.5, 1.0, 1.0);

    Wizard::SetContentsButtons(caption, contents, helptext,
	    BackButtonLabel(), FinishButtonLabel());

    if(size(overviewdev) < 1) {
	UI::ChangeWidget(`id(`edit_button), `Enabled, false);
	UI::ChangeWidget(`id(`delete_button), `Enabled, false);
	UI::ChangeWidget(`id(`test_button), `Enabled, false);
    }

    if(size(overviewif) < 1) {
	UI::ChangeWidget(`id(`editif_button), `Enabled, false);
	UI::ChangeWidget(`id(`delif_button), `Enabled, false);
    }

    any ret = nil;
    while(true) {

	ret = UI::UserInput();
	y2debug("UserInput: %1", ret);
	/* abort? */
	if(ret == `abort || ret == `cancel) {
	    if(ReallyAbort()) break;
	    else continue;
	}
	/* add */
	else if(ret == `add_button) {
	    ISDN::Add();
	    ret = `add;
	    break;
	}
	/* edit */
	else if(ret == `edit_button) {
	    string dev = UI::QueryWidget(`id(`table), `CurrentItem);
	    
	    ISDN::Edit(dev);
	    ret = `edit;
	    break;
	}
	/* delete */
	else if(ret == `delete_button) {
	    string dev = UI::QueryWidget(`id(`table), `CurrentItem);
	    ISDN::Delete(dev);
	    ISDN::Commit();
	    overviewdev = ISDN::OverviewDev();
	    UI::ChangeWidget(`id(`table), `Items, overviewdev);
	    if(size(overviewdev) < 1) {
		UI::ChangeWidget(`id(`edit_button), `Enabled, false);
		UI::ChangeWidget(`id(`delete_button), `Enabled, false);
		UI::ChangeWidget(`id(`test_button), `Enabled, false);
	    }
	    y2debug("overviewdev=%1",overviewif);
	    continue;
	}
	/* test */
	else if(ret == `test_button) {
	    string dev = UI::QueryWidget(`id(`table), `CurrentItem);
	    
	    if (! UI::YesNoPopup (_("Warning !\n
You like to test the selected card.
Please note that the system now will shutdown
the ISDN subsystem (if allready running)
and then try to load the selected card driver.
So don't use this feature if you are using any ISDN
services at the moment.

\nContinue?\n")))
		    continue;
	    ISDN::TestDev(dev);
	    ret = `testdev;
	    break;
	}
	/* addif */
	else if(ret == `addif_button) {
	    ISDN::AddIf();
	    ret = `addif;
	    break;
	}
	/* editif */
	else if(ret == `editif_button) {
	    string dev = UI::QueryWidget(`id(`TableIf), `CurrentItem);
	    ISDN::EditIf(dev);
	    ret = `editif;
	    break;
	}
	/* delif */
	else if(ret == `delif_button) {
	    string dev = UI::QueryWidget(`id(`TableIf), `CurrentItem);
	    ISDN::Delete(dev);
	    ISDN::Commit();
	    overviewif = ISDN::OverviewIf();
	    UI::ChangeWidget(`id(`TableIf), `Items, overviewif);
	    if(size(overviewif) < 1) {
		UI::ChangeWidget(`id(`delif_button), `Enabled, false);
		UI::ChangeWidget(`id(`editif_button), `Enabled, false);
	    }
	    y2debug("overviewif=%1",overviewif);
	    continue;
	}
	else if(ret == `next || ret == `back) {
	    break;
	}
	else {
	    y2error("unexpected retcode: %1", ret);
	    continue;
	}
    }

    return ret;
}

/* EOF */
}
