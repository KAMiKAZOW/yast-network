/**
 * File:	clients/routing_auto.ycp
 * Package:	Network configuration
 * Summary:	Client for autoinstallation
 * Authors:	Michal Svec <msvec@suse.cz>
 *
 * $Id$
 *
 * This is a client for autoinstallation. It takes its arguments,
 * goes through the configuration and return the setting.
 * Does not do any changes to the configuration.
 */

/**
 * @param first a map of routing settings
 * @return boolean success of operation
 * @example map mm = $[ "FAIL_DELAY" : "77" ];
 * @example map ret = WFM::CallModule("routing_auto", [ mm ]);
 */

{

textdomain "network";

y2milestone("----------------------------------------");
y2milestone("Routing auto started");

import "Routing";
include "network/services/routing.ycp";

list args = WFM::Args();
if(size(args) <= 0) {
    y2error("Did not get the settings, probably some mistake...");
    return false;
}
if(!is(WFM::Args(0), list)) {
    y2error("Bad argument for routing_auto: %1", WFM::Args(0));
    return false;
}

/* The settings are in the first argument */
list settings = args[0]:[];
y2debug("Imported: %1", settings);

Routing::Import(settings);
Wizard::CreateDialog();
Wizard::ReplaceNextButton(`PushButton(`id(`next), `opt(`default), FinishButtonLabel()));
symbol ret = RoutingMainDialog();
y2debug("ret=%1", ret);
UI::CloseDialog();

y2milestone("Routing auto finished");
y2milestone("----------------------------------------");

if(ret == `next) return Routing::Export();
return $[];

/* EOF */
}
