/**
 * File:	clients/isdn_proposal.ycp
 * Package:	Configuration of network
 * Summary:	ISDN configuration proposal
 * Authors:	Michal Svec <msvec@suse.cz>
 *
 * $Id$
 */

{

textdomain "network";

/* The main () */
y2milestone("----------------------------------------");
y2milestone("ISDN proposal started");

import "ISDN";
import "Progress";

include "network/routines.ycp";

string func = WFM::Args(0);
map param = WFM::Args(1);
map ret = $[];

/* create a textual proposal */
if(func == "MakeProposal") {
    string proposal = "";
    string warning = nil;
    symbol warning_level = nil;
    boolean force_reset = param["force_reset"]:false;

    if(force_reset || !ISDN::proposal_valid) {
        ISDN::proposal_valid = true;
	Progress::off();
	/* Popup text */
	BusyPopup(_("Detecting ISDN cards..."));
	ISDN::Read();
	BusyPopupClose();
    }
    list sum = ISDN::Summary(false);
    proposal = sum[0]:"";
    Progress::on();

    ret = $[
	"preformatted_proposal" : proposal,
	"warning_level" : warning_level,
	"warning" : warning,
    ];
}
/* run the module */
else if(func == "AskUser") {
    map stored = ISDN::Export();
    symbol seq = WFM::CallFunction(`isdn(.propose));
    if(seq != `next) ISDN::Import(stored);
    ret = $[
	"workflow_sequence" : seq
    ];
}
/* create titles */
else if(func == "Description") {
    ret = $[
	/* RichText label */
	"rich_text_title" : _("ISDN Adapters"),
	/* Menu label */
	"menu_title" : _("&ISDN Adapters"),
	"id" : "isdn",
    ];
}
/* write the proposal */
else if(func == "Write") {
    ISDN::Write(false);
}
/* unknown function */
else {
    y2error("unknown function: %1", func);
}

/* Finish */
y2debug("ret=%1",ret);
y2milestone("ISDN proposal finished");
y2milestone("----------------------------------------");
return ret;

/* EOF */
}
