/**
 * File:
 *   modules/ISDN.ycp
 *
 * Package:
 *   Configuration of network
 *
 * Summary:
 *   Data for configuration of ISDN, input and output functions.
 *
 * Authors:
 *   Michal Svec <msvec@suse.cz>
 *
 * $Id$
 *
 * Representation of the configuration of ISDN.
 * Input and output routines.
 *
 */

{

module "ISDN";
textdomain "network";

import "Progress";
import "Summary";

include "network/config.ycp";
include "network/hardware.ycp";
include "network/routines.ycp";
include "network/summary.ycp";
include "network/ip.ycp";

/*-------------*/
/* GLOBAL DATA */

/**
 */
global integer protocol = 0;

/**
 */
global string moduleOptions = "";

/**
 */
global string io = "";

global string irq = "";

global string membase = "";

global string io0 = "";

global string io1 = "";

global string io2 = "";

global string hisaxdebug = "";

global string eizmap = "";

global string type = "";

global string subtype = "";

global string localMSN = "";

global string dialMode = "";

global string idleTime = "";

global string chargeHUP = "off";

global boolean startAtBoot = true;

global boolean firewall = false;

global string encap = "syncppp";

global string localIP = "";

global string remoteIP = "";

global boolean dynamicIP = false;

global boolean dynamicDNS = false;

global string callback = "off";

/*--------------*/
/* PRIVATE DATA */

/**
 * Config information
 */
map CONFIG = $[];

/**
 * Hardware information
 * [
 *     "name"	: "Digital DecCHIP 1234",
 *     "unique"	: "uihd98723hodi2hgday8",
 * ]
 */
list HARDWARE = [];

/**
 * Abort function
 * return boolean return true if abort
 */
global block AbortFunction = nil;

/**
 * Data was modified?
 */
boolean modified = false;

/**
 * Which operation is pending?
 */
symbol operation = nil;

/*------------------*/
/* GLOBAL FUNCTIONS */

/**
 * Data was modified?
 * @return true if modified
 */
global define boolean Modified() ``{
    y2debug("modified=%1",modified);
    return modified;
};

/**
 * Read all network settings from the SCR
 * @return true on success
 */
global define boolean Read() ``{
    string caption = _("Initializing ISDN card configuration");
    integer steps = 2;

    /* FIXME */
    integer sl = 0; //1000;
    sleep(sl);

    Progress::New(caption, " ", steps, [
        _("Detect devices"),
        _("Read current configuration"),
        //_("Read routing configuration"),
        //_("Read hostname and DNS configuration"),
        //_("Read installation information"),
        //_("Detect current status"),
    ], [], "");

    if(Abort()) return false;
    ProgressNextStage(_("Detecting ISDN cards"));
    ReadHardware("isdn");
    sleep(sl);

    if(Abort()) return false;
    ProgressNextStage(_("Reading current configuration"));
    ReadConfig("isdn");
    sleep(sl);

    if(Abort()) return false;
    ProgressNextStage(_("Finished"));
    sleep(sl);

    if(Abort()) return false;
    return true;
}

global define boolean Write() ``{
    return true;
}

global define boolean Add() ``{
    return true;
}

global define boolean Edit() ``{
    return true;
}

global define boolean Delete() ``{
    return true;
}

global define boolean Commit() ``{
    return true;
}

global define boolean Import(map settings) ``{
    CONFIG = settings;
}

global define map Export() ``{
    return CONFIG;
}

/**
 * Build a textual summary and a list of unconfigured cards
 * @return summary of the current configuration
 */
global define list Summary(boolean split) ``{
    return BuildSummary(split);
}

/**
 */
global define list Overview() ``{
    return BuildOverview("isdn");
}

/* EOF */
}
