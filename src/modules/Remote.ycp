/**
 * File:	src/modules/Remote.ycp
 * Module:	Network configuration
 * Summary:	Module for Remote Administration via VNC
 * Authors:	Arvin Schnell <arvin@suse.de>
 *
 * $Id$
 *
 * Write only (but that should be easy to fix)
 */

{

module "Remote";
textdomain "network";

import "Label";
import "Mode";
import "Package";
import "Service";

/**
 * Allow remote administration
 */
global boolean allow_administration = false;

/**
 * Reset all module data.
 */
global void Reset() {
    allow_administration = false;
}

/**
 * Read the current status
 * @return true on success
 */
global boolean Read() {
    // FIXME: missing (#40458)
    return false;
}

/**
 * Update the SCR according to network settings
 * @return true on success
 */
global boolean Write() {

    if(allow_administration) {
	/* Install require packages */
	// #40155: have to specify a concrete window manager,
	// "windowmanager" only works for yast2 -i
	list<string> packages = ["xinetd", "tightvnc", "XFree86", "XFree86-Xvnc", ];
	if (!Package::Installed ("kdebase3"))
	{
	    packages = add (packages, "fvwm2");
	}
	if(!Package::InstallAll(packages)) {
	    y2error("Installing of required packages failed");
	    return false;
	}

	/* Enable xinetd */
	if(!Service::Enable("xinetd")) {
	    y2error("Enabling of xinetd failed");
	    return false;
	}

	/* Enable XDM */
	if(!Service::Enable("xdm")) {
	    y2error("Enabling of xdm failed");
	    return false;
	}
    }

    /* Set DISPLAYMANAGER_REMOTE_ACCESS in sysconfig/displaymanager */
    SCR::Write(.sysconfig.displaymanager.DISPLAYMANAGER_REMOTE_ACCESS,
		allow_administration ? "yes" : "no");
    SCR::Write(.sysconfig.displaymanager.DISPLAYMANAGER_ROOT_LOGIN_REMOTE,
		allow_administration ? "yes" : "no");
    SCR::Write(.sysconfig.displaymanager, nil);

    // Enable/disable vnc1 and vnchttpd1 in xinetd.d/vnc
    // If the port is changed, change also the help in remote/dialogs.ycp
    list<map> xinetd = (list<map>) SCR::Read(.etc.xinetd_conf.services);
    xinetd = maplist (map m, xinetd, {
	string s = m["service"]:"";
	if (s == "vnc1" || s == "vnchttpd1") {
	    m["changed"] = true;
	    m["enabled"] = allow_administration;
	}
	return m;
    });
    SCR::Write(.etc.xinetd_conf.services, xinetd);

    if(Mode::normal) {
	SCR::Execute(.target.bash, "/sbin/SuSEconfig --module xdm");
	SCR::Execute(.target.bash, "/sbin/SuSEconfig --module kde3");
	SCR::Execute(.target.bash, "/sbin/SuSEconfig --module kdm3");

	boolean dm_was_running = Service::Status("xdm") == 0;
	if(allow_administration) {
	    SCR::Write(.etc.inittab.id, "5:initdefault:");
	    SCR::Write(.etc.inittab, nil);

	    Service::Start("xinetd");
	    if (!dm_was_running)
	    {
		//#41611: with Service::Start, yast hangs :-(
		SCR::Execute (.target.bash_background, "/etc/init.d/xdm start");
	    }
	}

	// FIXME: reload XDM (#40458)
	// For now, inform the user
	if (dm_was_running)
	{
	    import "Report";
	    // message popup
	    // %1 is a system command
	    Report::Message (sformat (
_("For the settings to take effect, the display manager
must be restarted. This will terminate all X Windows sessions
so you should do it manually from the console by calling
\"%1\"."), "rcxdm restart"));
	}
    }

    return true;
}

/* EOF */
}
