/**
 * File:	src/modules/Remote.ycp
 * Module:	Network configuration
 * Summary:	Module for Remote Administration
 * Authors:	Arvin Schnell <arvin@suse.de>
 *
 * $Id$
 */

{

module "Remote";
textdomain "network";

import "Label";
import "Package";
import "Service";

/**
 * Allow remote administration
 */
global boolean allow_administration = false;

/**
 * Reset all module data.
 */
global define void Reset() {
    allow_administration = false;
}

/**
 * Update the SCR according to network settings
 * @return true on success
 */
global define boolean Write() {

    if(allow_administration) {
	/* Install require packages */
	if(!Package::InstallAll(["xinetd", "tightvnc", "XFree86-Xvnc"])) {
	    y2error("Installing of required packages failed");
	    return false;
	}

	/* Enable xinetd */
	if(!Service::Enable("xinetd")) {
	    y2error("Enabling of xinetd failed");
	    return false;
	}
    }

    /* Set DISPLAYMANAGER_REMOTE_ACCESS in sysconfig/displaymanager */
    SCR::Write(.sysconfig.displaymanager.DISPLAYMANAGER_REMOTE_ACCESS,
		allow_administration ? "yes" : "no");
    SCR::Write(.sysconfig.displaymanager.DISPLAYMANAGER_ROOT_LOGIN_REMOTE,
		allow_administration ? "yes" : "no");
    SCR::Write(.sysconfig.displaymanager, nil);
    // FIXME: SUSEconfig missing if not in installation

    /* En- or disable vnc10 and vnchttpd10 in xinetd.d/vnc
     * note: we make use of the "alias problem" */
    list<map> xinetd = (list<map>) SCR::Read(.etc.xinetd_conf.services);
    foreach(map m, xinetd, {
	string s = m["service"]:"";
	if (s == "vnc10" || s == "vnchttpd10") {
	    m["changed"] = true;
	    m["enabled"] = allow_administration;
	}
    });
    SCR::Write(.etc.xinetd_conf.services, xinetd);

    return true;
}

/* EOF */
}
