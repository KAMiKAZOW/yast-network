/**
 * File:
 *   modules/DNS.ycp
 *
 * Package:
 *   Configuration of network
 *
 * Summary:
 *   Hostname and DNS settings
 *
 * Authors:
 *   Michal Svec <msvec@suse.cz>
 *
 * $Id$
 *
 */

{

module "DNS";
textdomain "network";

global string hostname = ""; //blah";
global string domain = ""; //blum.cz";
global list nameservers = []; //"ns1", "ns2"];
global list searchlist = []; //"s1", "s2"];
global boolean dhcp_hostname = false;

/**
 * Is any device configured with DHCP?
 */
boolean has_dhcp = true;

/**
 * Reads current DNS and hostname settings
 * @return true if success
 */
global define boolean Read() ``{

    /* set hostname via dhcp? */
    string dhcp = "";
    dhcp = SCR::Read(.sysconfig.dhcp.DHCLIENT_SET_HOSTNAME);
    if(dhcp == nil) dhcp = "";
    y2debug("dhcp=%1",dhcp);
    dhcp_hostname = (tolower(dhcp) == "yes") ? true : false;

    /* install.inf from linuxrc */
    map install_inf = $[];
    if(SCR::Read(.target.size, "/etc/install.inf") != -1)
	install_inf = SCR(`Read(.etc.install_inf));

    /* any dhcp device? */
    has_dhcp = true;
    /* FIXME unused */

    /* FIXME
    if (SCR (`Execute (.target.bash, "/sbin/modify_resolvconf check -q")) != 0) {
	string process = SCR (`Read (.resolver.process));
	symbol ui = ModifyResolvConfPopup (process);
	if (ui == `modify)
	{
	    modify_header = true;
	}
	else if (ui == `keep)
	{
	    keep_original = true;
	}
    }
    */

    /* name servers */
    list resolvlist = SCR::Read(.etc.resolv_conf.nameserver);
    if(resolvlist == nil) {
	if(size(lookup(install_inf, "nameserver", "")) > 0)
	    change(nameserver, (lookup(install_inf, "nameserver", "")));
    }
    else
	nameservers = resolvlist;

    /* search list */
    resolvlist = SCR::Read(.etc.resolv_conf.search);
    if(resolvlist != nil) searchlist = resolvlist;
    if(size(searchlist) < 1) {
	string dom = SCR::Read(.etc.resolv_conf.domain);
	if(dom != nil && dom != "") searchlist = [ dom ];
    }

    /* host name and domain */
    string fqhostname = "";
    if(SCR::Read(.target.size, "/etc/HOSTNAME") > 0) {
	fqhostname = SCR::Read(.target.string, "/etc/HOSTNAME");
	fqhostname = substring(fqhostname, 0, findfirstof(fqhostname, "\n"));
    }

    if(fqhostname != "") {
	integer dot = findfirstof(fqhostname, ".");
	if(dot != nil) {
	    hostname = substring(fqhostname, 0, dot);
	    domain = substring(fqhostname, dot+1);
	}
	else
	    hostname = fqhostname;
    }
    else {
	/* default hostname and domain (if not in /etc/install.inf) */
	hostname = lookup(install_inf, "machinename", "linux");
	domain = lookup(install_inf, "domain", "local");
    }

    return true;
}

/**
 * Write new DNS and hostname settings
 * @return true if success
 */
global define boolean Write() ``{

    /* build FQ hostname */
    string fqhostname = hostname;
    if(domain != "") fqhostname = fqhostname + "." + domain;

    /* set hostname via dhcp? */
    SCR::Write(.sysconfig.dhcp.DHCLIENT_SET_HOSTNAME, dhcp_hostname?"yes":"no");

    if(!dhcp_hostname) {
	/* remember the X authorization key */
	string xauth_key = SCR::Read(.xauth.key);

	/* change the hostname */
	SCR::Execute(.target.bash, "/bin/hostname " + fqhostname);

	/* update X authorization */
	SCR::Write(.xauth.key, xauth_key);

	/* write hostname */
	SCR::Write(.target.string, "/etc/HOSTNAME", fqhostname + "\n");
	SCR::Execute(.target.bash, "/sbin/SuSEconfig --quick --nonewpackage --module hostname");

    }

    /* update /etc/resolv.conf */
    SCR::Write(.etc.resolv_conf.search, searchlist);
    SCR::Write(.etc.resolv_conf.nameserver, nameservers);
    SCR::Write(.etc.resolv_conf, nil);

    /* update domain in /etc/resolv.conf */
    if(size(searchlist) > 0)
	SCR::Write(.resolver.domain, "");
    else
	SCR::Write(.resolver.domain, domain);

    return true;
}

/* EOF */
}
