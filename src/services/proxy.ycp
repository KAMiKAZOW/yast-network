/**
 * File:	include/network/services/proxy.ycp
 * Package:	Configuration of network
 * Summary:	Proxy configuration
 * Authors:	Michal Svec <msvec@suse.cz>
 *
 * $Id$
 */

{

textdomain "network";

import "Proxy";
import "Wizard";

include "ui/common_popups.ycp";
include "ui/common_messages.ycp";

include "network/routines.ycp";

/**
 * Proxy dialog
 * @return dialog result
 */
global define symbol ProxyMainDialog() ``{

    /* Proxy dialog caption */
    string caption = _("Proxy Configuration");

    /* Proxy dialog help 1/5 */
    string help = _("<p>Here, configure your Internet proxy (caching) settings.</p>") +

    /* Proxy dialog help 2/5 */
    _("<p><b>HTTP proxy</b> is the name of the proxy server for your access
to the world wide web (WWW).</p>") +

    /* Proxy dialog help 2.5/5 */
    _("<p>Example: <i>http://proxy.provider.com:3128</i></p>") +

    /* Proxy dialog help 3/5 */
    _("<p><b>FTP proxy</b> is the name of the proxy server for your access
to the file transfer services (FTP).</p>") +

    /* Proxy dialog help 4/5 */
    _("<p><b>No proxy domains</b> is a list of domains for which the requests
should be done directly without caching.</p>") +

    /* Proxy dialog help 5/5 */
    _("<p>If you are using a proxy server with authorization, fill in
<b>Proxy user name</b> and <b>Proxy password</b>.</p>");

    /* Proxy dialog contents */
    term contents = `HBox(
	`HSpacing(6),
    /* Frame label */
	`Frame(_("Proxy settings"), `HBox(`HSpacing(2), `VBox(
	    `VSpacing(1),
	    /* Text entry label */
	    `TextEntry(`id(`http), _("&HTTP proxy"), Proxy::http),
	    `VSpacing(0.2),
	    /* Text entry label */
	    `TextEntry(`id(`ftp), _("F&TP proxy"), Proxy::ftp),
	    `VSpacing(0.2),
	    /* Text entry label */
	    `TextEntry(`id(`no), _("N&o proxy domains"), Proxy::no),
	    `VSpacing(0.2),
	    /* Text entry label */
	    `TextEntry(`id(`user), _("Proxy &user name"), Proxy::user),
	    `VSpacing(0.2),
	    /* Text entry label */
	    `TextEntry(`id(`pass), _("Proxy &password"), Proxy::pass),
	    `VSpacing(1)
	    ), `HSpacing(2))),
	`HSpacing(6)
    );

    Wizard::SetContentsButtons(caption, contents, help,
	    BackButtonLabel(), FinishButtonLabel());

    any ret = nil;
    while(true) {

	ret = UI::UserInput();

	/* abort? */
	if(ret == `abort || ret == `cancel) {
	    if(ReallyAbort()) break;
	    else continue;
	}
	/* next */
	else if(ret == `next) {
	    /* check_* */
	    // FIXME!
	    break;
	}
	/* back */
	else if(ret == `back) {
	    break;
	}
	else {
	    y2error("unexpected retcode: %1", ret);
	    continue;
	}
    }

    if(ret == `next) {
	Proxy::http = UI::QueryWidget(`id(`http), `Value);
	Proxy::ftp = UI::QueryWidget(`id(`ftp), `Value);
	Proxy::no = UI::QueryWidget(`id(`no), `Value);
	Proxy::user = UI::QueryWidget(`id(`user), `Value);
	Proxy::pass = UI::QueryWidget(`id(`pass), `Value);
	// #17623
	// FIXME: only set it when a value has changed
	Proxy::modified = true;
    }

    return ret;
}

if(false) {
    Wizard::CreateDialog();
    ProxyMainDialog();
}

/* EOF */
}
