/**
 * File:	clients/inst_netsetup.ycp
 * Package:	Network configuration
 * Summary:	Setup network in continue mode if required
 * Authors:	Arvin Schnell <arvin@suse.de>
 *
 * $Id$
 */

{

import "Arch";
import "Mode";

symbol mode = (symbol)WFM::Args (2);

y2milestone("----------------------------------------");
y2milestone("Lan netsetup module started");


string netdevice = (string)SCR::Read (.etc.install_inf.Netdevice);
if (netdevice == nil) netdevice = "eth0";

string netconfig = (string)SCR::Read (.etc.install_inf.NetConfig);
if (netconfig == nil) netconfig = "static";
if (netconfig == "dhcp") netconfig = "static"; // FIXME

string ipaddr = (string)SCR::Read (.etc.install_inf.IP);
if (ipaddr == nil) ipaddr = "";

string netmask = (string)SCR::Read (.etc.install_inf.Netmask);
if (netmask == nil) netmask = "";

string gateway = (string)SCR::Read (.etc.install_inf.Gateway);
if (gateway == nil) gateway = "";


define void load_modules () ``{
    list<string> install_aliases = (list<string>)SCR::Dir (.etc.install_inf_alias);
    foreach (string alias, install_aliases, ``{
	string target = (string)SCR::Read (add (.etc.install_inf_alias, alias));
	SCR::Execute (.target.modprobe, target, "");
    });
};


if (mode == `up)
{
    if (!Mode::test && !Arch::s390)
    {
	SCR::Execute (.target.bash, "/sbin/ifconfig lo 127.0.0.1 up");

	if ((Mode::boot == "nfs") || (Mode::boot == "http") ||
	    (Mode::boot == "smb") || (Mode::boot == "ftp"))
	{
	    if (netconfig == "static")
	    {
		load_modules ();

		string ifconfig = "/sbin/ifconfig " + netdevice + " up " + ipaddr;
		if (netmask != "")
		    ifconfig = ifconfig + " netmask " + netmask;
		SCR::Execute (.target.bash, ifconfig);

		if (gateway != "")
		{
		    string route = "/sbin/route add default gw " + gateway;
		    SCR::Execute (.target.bash, route);
		}
	    }
	    else if (netconfig == "dhcp")
	    {
		// FIXME
	    }
	    else
	    {
		y2error ("unknown netconfig %1", netconfig);
	    }
	}
    }

    if (Mode::boot == "nfs")
    {
	SCR::Execute (.target.bash, "/sbin/rcportmap start");
    }

    y2milestone("IFCONFIGA: %1", SCR::Execute(.target.bash_output, "/sbin/ifconfig"));
}


if (mode == `dn)
{
    if (Mode::boot == "nfs")
    {
	// disable all sources
	Pkg::SourceFinishAll ();

	SCR::Execute (.target.bash, "/sbin/rcportmap stop");
    }

    if (!Mode::test && !Arch::s390)
    {
	if ((Mode::boot == "nfs") || (Mode::boot == "http") ||
	    (Mode::boot == "smb") || (Mode::boot == "ftp"))
	{
	    if (netconfig == "static")
	    {
		if (gateway != "")
		{
		    string route = "/sbin/route del default gw " + gateway;
		    SCR::Execute (.target.bash, route);
		}

		string ifconfig = "/sbin/ifconfig " + netdevice + " down";
		SCR::Execute (.target.bash, ifconfig);
	    }
	    else if (netconfig == "dhcp")
	    {
		// FIXME
	    }
	    else
	    {
		y2error ("unknown netconfig %1", netconfig);
	    }
	}
    }
}


y2milestone("Lan netsetup module finished");
y2milestone("----------------------------------------");

return `auto;

/* EOF */
}
