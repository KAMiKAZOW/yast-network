/**
 * File:	include/network/installation/dialogs.ycp
 * Package:	Network configuration
 * Summary:	Configuration dialogs for installation
 * Authors:	Michal Svec <msvec@suse.cz>
 *		Arvin Schnell <arvin@suse.de>
 *
 * $Id$
 */

{

textdomain "network";

import "Wizard";
import "Internet";

include "ui/common_messages.ycp";
include "ui/common_popups.ycp";

include "network/routines.ycp";

/**
 * Ask for password if required
 * @return true on success
 */
global define boolean AskForPassword() ``{

    if(Internet::askpassword == nil) return true;
    if(Internet::askpassword == false) return true;

    UI::OpenDialog(`VBox(
	/* Heading text */
	`Heading(_("Enter Provider Password")),
	/* PasswordEntry label */
	`Password(`id(`password), _("&Password:")),
	`HBox(
	    `PushButton(`id(`ok), `opt(`default), OKButtonLabel()),
	    `PushButton(`id(`cancel), CancelButtonLabel()))
    ));

    UI::SetFocus(`id(`password));
    symbol ret = UI::UserInput();
    UI::CloseDialog();

    if(ret == `ok) {
	Internet::password = UI::QueryWidget(`id(`password), `Value);
	return true;
    }

    return false;
}

/**
 * Connection steps dialog
 * @return dialog result
 */
global define symbol TestStepsDialog() ``{

    ScreenName("installation-steps-dialog");

    /* Steps dialog caption */
    string caption = _("Test Internet Connection");

    /* help for dialog "Test Internet Connection" */
    string help = _("<p>Here, you can validate the Internet connection just
configured. The test is entirely optional. A successful result will enable you
to run the YaST Online Update.</p>");

    /* Label text (keep lines max. 65 chars long) */
    string label = _("To validate your Internet access, activate the test procedure.");

    map labels = $[
	/* Label text (keep lines max. 65 chars long) */
	"dsl" : _("To validate your DSL Internet access, activate
the test procedure."),
	/* Label text (keep lines max. 65 chars long) */
	"isdn" : _("To validate your ISDN Internet access, activate
the test procedure."),
	/* Label text (keep lines max. 65 chars long) */
	"modem" : _("To validate your modem Internet access, activate
the test procedure."),
    ];

    string type = Internet::FastestType(Internet::device);
    if(haskey(labels, type)) label = labels[type]:"";


    boolean already_up = false;
    if (!Mode::test)
	already_up = Internet::Status ();


    /* Radiobuttons */
    term buttons = `VBox(
	`VSpacing(1),
	/* RadioButton label */
	`Left(`RadioButton(`id(`yes), _("&Yes, Test Connection to the Internet"), Internet::do_test)),
	/* RadioButton label */
	`Left(`RadioButton(`id(`no), _("N&o, Skip This test"), !Internet::do_test)),
	`VSpacing(1)
    );

    /* the steps */
    term steps = nil;
    if (already_up)
    {
	steps = `VBox (
		       /* Label text */
		       `Left(`Label(_("- Download latest release notes"))),
		       /* Label text */
		       `Left(`Label(_("- Check for latest updates")))
		       );
    }
    else
    {
	steps = `VBox (
		       /* Label text */
		       `Left(`Label(_("- Connect to SuSE server via Internet"))),
		       /* Label text */
		       `Left(`Label(_("- Download latest release notes"))),
		       /* Label text */
		       `Left(`Label(_("- Check for latest updates"))),
		       /* Label text */
		       `Left(`Label(_("- Close connection")))
		       );
    }

    /* Steps dialog contents */
    term contents = `HBox(
	`HSpacing(5),
	`VBox(
	    `Left(`Label(label)),
	    `VSpacing(1),
	    /* Heading text */
	    `Left(`Heading(_("The following steps will be performed:"))),
	    `VSpacing(1),
	    steps,
	    `VSpacing(2),
	    /* Frame label */
	    `Frame(_("Select:"), `RadioButtonGroup(`id(`rb), `HBox(
		`HSpacing(2),
		buttons,
		`HSpacing(2)
	    ))),
	    `VSpacing(1)
	),
	`HSpacing(5)
    );

    Wizard::SetContentsButtons(caption, contents, help,
	    BackButtonLabel(), NextButtonLabel());

    any ret = nil;

    while(true) {
	ret = UI::UserInput();

	if(ret == `abort || ret == `cancel) {
	    if(UI::ReallyAbortPopup(false)) break;
	    else continue;
	}
	else if (ret == `next || ret == `back) {
	    break;
	}

	y2error("Unexpected return code: %1", ret);
    }

    Internet::do_test = UI::QueryWidget(`id(`rb), `CurrentButton) == `yes;
    y2debug("Internet::do_test=%1", Internet::do_test);

    return ret;
}


/**
 * Connection test dialog
 * @return dialog result
 */
global define symbol AskYOUDialog() ``{

    ScreenName("installation-you-dialog");

    /* Radiobuttons */
    term buttons = `VBox(
	`VSpacing(1),
	/* RadioButton label */
	`Left(`RadioButton(`id(`yes), _("&Yes, Run Online Update Now"), Internet::do_you)),
	/* RadioButton label */
	`Left(`RadioButton(`id(`no), _("N&o, Skip Update"), !Internet::do_you)),
	`VSpacing(1)
    );

    /* Dialog Content */
    term content = `HBox(
	`HSpacing(1),
	`VBox(
	    `VSpacing(1),
	    /* Heading text */
	    `Left(`Heading(_("Online Updates Available"))),
	    `VSpacing(1),
	    /* Label text */
	    `Label(_("Download and install
them via the YaST Online Update?")),
	    `RadioButtonGroup(`HBox(
		`HSpacing(2),
		buttons,
		`HSpacing(2)
	    )),
	    `HBox(`PushButton(`opt(`default), OKButtonLabel())),
	    `VSpacing(0.5)
	),
	`HSpacing(1)
    );

    UI::OpenDialog(content);
    UI::UserInput();

    Internet::do_you = UI::QueryWidget (`id(`yes), `Value);
    y2debug("Internet::do_you=%1", Internet::do_you);

    UI::CloseDialog ();
}

/* EOF */
}
