/**
 * File:	include/network/installation/dialogs.ycp
 * Package:	Network configuration
 * Summary:	Configuration dialogs for installation
 * Authors:	Michal Svec <msvec@suse.cz>
 *
 * $Id$
 */

{

textdomain "network";

import "DSL";
import "ISDN";
import "Lan";
import "Modem";
import "Wizard";
import "Internet";

include "ui/common_messages.ycp";
include "ui/common_popups.ycp";

include "network/routines.ycp";


/**
 * Connection steps dialog
 * @return dialog result
 */
global define symbol TestStepsDialog() ``{

    ScreenName("installation-steps-dialog");

    /* Steps dialog caption */
    string caption = _("Test Connection To The Internet");

    /* Steps dialog help 1/7 */
    string help = _("<p>FIXME
</p>");

    /* Label text (keep lines max. 65 chars long) */
    string label1 = _("To validate your Internet access we suggest to
activate the test procedure.");
    if (Internet::type == "dsl")
	/* Label text (keep lines max. 65 chars long) */
	label1 = _("To validate your DSL Internet access we suggest to
activate the test procedure.");
    if (Internet::type == "isdn")
	/* Label text (keep lines max. 65 chars long) */
	label1 = _("To validate your ISDN Internet access we suggest to
activate the test procedure.");
    if (Internet::type == "modem")
	/* Label text (keep lines max. 65 chars long) */
	label1 = _("To validate your Modem Internet access we suggest to
activate the test procedure.");

    boolean test = true;

    /* Steps dialog contents */
    term contents = `HBox(
	`HSpacing(6),
	`VBox(
	    `Left(`Label(label1)),
	    `VSpacing(1),
	    /* Frame label */
	    `Frame(_("Please select:"), `RadioButtonGroup(`id(`rb), `HBox(`HSpacing(2), `VBox(
		`VSpacing(1),
		/* Heading text */
		`Left(`Heading(_("Following steps will be done during the test:"))),
		`VSpacing(1),
		/* Label text */
		`Left(`Label(_("- Connect to SuSE server via Internet"))),
		/* Label text */
		`Left(`Label(_("- Check for latest updates"))),
		/* Label text */
		`Left(`Label(_("- Download latest release notes"))),
		/* Label text */
		`Left(`Label(_("- Close connection"))),
		`VSpacing(1),
		/* RadioButton label */
		`Left(`RadioButton(`id(`yes), _("&Yes, test connection to the Internet"), test)),
		/* RadioButton label */
		`Left(`RadioButton(`id(`no), _("N&o, skip this test"), !test)),
		`VSpacing(1)
	    ), `HSpacing(2))))
	),
	`HSpacing(6)
    );

    Wizard::SetContentsButtons(caption, contents, help,
	    BackButtonLabel(), NextButtonLabel());

    any ret = nil;
    while(true) {
	ret = UI::UserInput();

	if(ret == `abort || ret == `cancel) {
	    if(ReallyAbort()) break;
	    else continue;
	}
	else if(ret == `back) {
	    break;
	}
	else if(ret == `next) {
	    /* check_* */
	    break;
	}
	else {
	    y2error("Unexpected return code: %1", ret);
	    continue;
	}
    }

    if(ret == `next) {
	test = UI::QueryWidget(`id(`rb), `CurrentButton) == `yes;
	y2debug("test=%1", test);
    }

    return ret;
}

/**
 * Connection test dialog
 * @return dialog result
 */
global define symbol TestConnectionDialog() ``{

    ScreenName("installation-test-dialog");

    /* Test dialog caption */
    string caption = _("Running Internet Connection Test");

    /* Test dialog help 1/7 */
    string help = _("<p>FIXME
</p>");

    /* Test dialog contents */
    term contents = `VBox(
	/* Frame label */
	`Label(_("Test sequence information")),
	/* Frame label */
	`Label(_("Test protocol")),
	/* Frame label */
	`Label(_("Results")),
	/* Progress step 1/4 */
	`Label(_("Connect to the Internet")),
	/* Progress step 1/4 */
	`Label(_("Check for latest updates")),
	/* Progress step 1/4 */
	`Label(_("Get latest release notes")),
	/* Progress step 1/4 */
	`Label(_("Close connection"))
    );

    Wizard::SetContentsButtons(caption, contents, help,
	    BackButtonLabel(), NextButtonLabel());

    any ret = nil;
    while(true) {
	ret = UI::UserInput();

	if(ret == `abort || ret == `cancel) {
	    if(ReallyAbort()) break;
	    else continue;
	}
	else if(ret == `back) {
	    break;
	}
	else if(ret == `next) {
	    /* check_* */
	    break;
	}
	else {
	    y2error("Unexpected return code: %1", ret);
	    continue;
	}
    }

    if(ret == `next) {
	// FIXME
    }

    return ret;
}

if(true) {
    Internet::FindFastest ();
    Wizard::CreateDialog();
    TestStepsDialog();
    TestConnectionDialog();
}

/* EOF */
}
