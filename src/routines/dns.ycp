/**
 * File:	include/network/dns.ycp
 * Module:	Network configuration library
 * Summary:	DNS manipulation routines
 * Authors:	Michal Svec <msvec@suse.cz>
 *
 * $Id$
 */

{

textdomain "network";

/**
 * @return describe a valid domain name
 */
global define string valid_domainname () ``{
    //Translators: dot: ".", hyphen: "-"
    return _(
"A valid domain name consists of components separated by dots.
Each component contains letters, digits and hyphens.
A hyphen may not start or end a component
and the last component may not begin with a digit.");
}

/**
 * Check syntax of hostname entry
 * (that is a domain name component, unqualified, without dots)
 * @see rfc1123, rfc2396 and obsoleted rfc1034
 * @param host hostname
 * @return true if correct
 */
global define boolean check_hostname(string host) ``{
    if(host == nil || host == "" || size(host) > 63) return false;
    return regexpmatch(host, "^[[:alnum:]]([[:alnum:]-]*[[:alnum:]])?$");
}

/**
 * Check syntax of fully qualified hostname
 * @param host hostname
 * @return true if correct
 */
global define boolean check_fqhostname(string host) ``{
    return check_domainname(host);
}

/**
 * Check syntax of domain entry
 * @param domain domain name
 * @return true if correct
 */
global define boolean check_domainname(string domain) ``{
    if(domain == nil || domain == "") return false;
    list l = splitstring (domain, ".");
    if(contains(maplist(`h, l, ``(check_hostname(h))), false)) return false;
    return regexpmatch(domain, "\\.[[:alpha:]]([[:alnum:]-]*[[:alnum:]])?$");
}

/* EOF */
}
